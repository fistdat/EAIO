version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eaio-backend-prod
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4o-mini
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - DATABASE_URL=mongodb://mongo:27017/energy-ai-optimizer
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - LOG_LEVEL=INFO
    depends_on:
      - mongo
      - redis
    command: bash -c "cd /app && python -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --workers 1"

  # Frontend application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eaio-frontend-prod
    restart: always
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend

  # Web server for documentation
  webserver:
    image: nginx:alpine
    container_name: eaio-webserver
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./docs:/usr/share/nginx/html
    command: sh -c "echo '<html><head><title>Energy AI Optimizer</title></head><body><h1>Energy AI Optimizer</h1><p>Hệ thống đa tác tử AI tối ưu hóa năng lượng cho tòa nhà sử dụng Microsoft AutoGen, OpenAI GPT-4o Mini, Python backend và Node.js frontend.</p><p>Phiên bản demo đang được cài đặt.</p></body></html>' > /usr/share/nginx/html/index.html && nginx -g 'daemon off;'"

  # MongoDB for data storage
  mongo:
    image: mongo:6.0
    container_name: eaio-mongo-prod
    restart: always
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=energy-ai-optimizer

  # Redis for caching and pub/sub
  redis:
    image: redis:7.0
    container_name: eaio-redis-prod
    restart: always
    volumes:
      - redis-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # Vector database (Milvus)
  milvus:
    image: milvusdb/milvus:v2.2.9
    container_name: eaio-milvus-prod
    restart: always
    volumes:
      - milvus-data:/var/lib/milvus
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    depends_on:
      - etcd
      - minio

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: eaio-etcd-prod
    restart: always
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd-data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: eaio-minio-prod
    restart: always
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio-data:/data
    command: minio server /data

volumes:
  mongo-data:
  redis-data:
  milvus-data:
  etcd-data:
  minio-data: 