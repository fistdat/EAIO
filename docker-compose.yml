version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eaio-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - python-packages:/usr/local/lib/python3.10/site-packages
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4o-mini
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - POSTGRES_URL=postgresql://eaio:eaiopassword@postgres:5432/energy-ai-optimizer
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - EAIO_DATA_PATH=/app/data
      - DB_TYPE=postgres
      - DISABLE_VECTOR_DB=true
    depends_on:
      - postgres
      - redis
    command: bash -c "cd /app && chmod +x start.sh && ./start.sh"

  # Frontend application  
  frontend:
    image: node:18-alpine
    container_name: eaio-frontend
    restart: unless-stopped
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:8000
      - PORT=3000
      - SKIP_PREFLIGHT_CHECK=true
    depends_on:
      - backend
    command: sh -c "cd /app && npm install --force && npm install ajv@8.12.0 --force && npm start"

  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: eaio-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/config/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_USER=eaio
      - POSTGRES_PASSWORD=eaiopassword
      - POSTGRES_DB=energy-ai-optimizer
    command: postgres -c shared_preload_libraries=timescaledb

  # pgAdmin for PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: eaio-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@eaio.com
      - PGADMIN_DEFAULT_PASSWORD=eaiopassword
      - PGADMIN_CONFIG_SERVER_MODE=True
    depends_on:
      - postgres

  # Redis for caching and pub/sub
  redis:
    image: redis:7.0
    container_name: eaio-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # Vector database (Milvus)
  milvus:
    image: milvusdb/milvus:v2.2.9
    platform: linux/amd64
    container_name: eaio-milvus
    restart: unless-stopped
    ports:
      - "19530:19530"
      - "19121:19121"
    volumes:
      - milvus-data:/var/lib/milvus
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    depends_on:
      - etcd
      - minio

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: eaio-etcd
    restart: unless-stopped
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd-data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: eaio-minio
    restart: unless-stopped
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio-data:/data
    command: minio server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  python-packages:
  redis-data:
  milvus-data:
  etcd-data:
  minio-data:
  postgres-data:
  pgadmin-data:

# Hướng dẫn sử dụng pgAdmin:
# 1. Truy cập http://localhost:5050
# 2. Đăng nhập với admin@eaio.com / eaiopassword
# 3. Thêm server mới với các thông tin sau:
#    - General > Name: EAIO PostgreSQL
#    - Connection > Host: postgres
#    - Connection > Port: 5432
#    - Connection > Username: eaio
#    - Connection > Password: eaiopassword
#    - Connection > Database: energy-ai-optimizer